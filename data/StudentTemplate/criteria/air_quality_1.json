{
  "Pandas":{
        "title":"Pandas",
        "additionalNotes":true,
        "positive":[
        {
            "mainPoint":"Overall Pandas feedback",
            "subPoints":[
                "Good use of Pandas.",
                "hourly means - well done",
                "rolling average - well done",
                "reading in the data - done concisely"
            ]
        }
    ],
        "negative":[
        {
            "mainPoint":"Reading data into Pandas",
            "subPoints":[
                "delimiter (i.e., `sep`) - incorrectly specified the separator used within the CSV-formatted file",
                "header (i.e., `header`) - incorrectly specified the header line",
                "input data - incorrectly combined the data - combining the data to give 7200 rows (e.g., via `concat`) results in the eventual need for writing more code, and it is difficult to visually compare the the stations' results in a table",
                "input data - incorrectly read in the data",
                "input data - could have been done more concisely (e.g., loops or user-defined function)",
                "input file - renaming the input data file is very poor practice",
                "input file path - hard coding your local folder structure for the input file path results in problems, requiring the user to edit your notebook"
            ]
        },
        {
            "mainPoint":"Input and Computed Data",
            "subPoints":[
                "dataframes - creating multiple dataframes for this solution was not necessary, and only complicates the work",
                "datetime -  the data conversion to was incorrectly done (e.g., using `to_datetime`)",
                "rolling average - did not use Panda's function `rolling`",
                "rolling average - did not use the computed hourly means as input",
                "rolling average - done incorrectly`"
            ]
        },
        {
            "mainPoint":"Data cleaning",
            "subPoints":[
                "cleaning - done to early and removed usable data; Task2: `Using as much hourly data as available across all stations...`",
                "cleaning - the data was not cleaned properly (i.e., `drop`)"
            ]
        },
        {
            "mainPoint":"Displaying a dataframe as a table",
            "subPoints":[
                "A dataframe in a Jupyter-notebook should be displayed by either using the dataframe's name by itself, or using `display`.",
                "Printing a dataframe does not make use Jupyter-notebook's capability of displaying an easily readable table."
            ]
        }
      ]
   },
  "plotting":{
      "title":"matplotlib",
      "additionalNotes":true,
      "negative":[
         {
            "mainPoint":"The following problems exist concerning your data plotting",
            "subPoints":[
               "library usage - did not use matplotlib as requested in the assignment"
            ]
         }
      ]
   },
  "unit test":{
      "title":"Unit Test",
      "additionalNotes":true,
      "positive":[
        {
            "mainPoint":"",
            "subPoints":[
                "Good job on creating a unit test."
            ]
        }
    ],
      "neutral":[
         {
            "mainPoint":"",
            "subPoints":[
              "Creating a unit test would have been logical and good practice (e.g., for the RMSE user-defined function)."
            ]
         }
      ]
   },
  "user-defined function":{
      "title":"user-defined function",
      "additionalNotes":true,
      "positive":[
        {
            "mainPoint":"The following was good about your RMSE function",
            "subPoints":[
                "NumPy functions - good job on maximizing the use of NumPy's function for the mathematics",
                "type hinting - correct `np.float64` output type specified"
            ]
        }
    ],      "negative":[
         {
            "mainPoint":"The following problems exist concerning your RMSE function",
            "subPoints":[
              "mixed existing functions - mixed the usage of NumPy and Pandas functions (e.g. `DataFrame.mean()` instead of `np.mean()`",
              "NumPy functions - did not optimize the usage of NumPy's functions to perform the mathematics",
              "type hinting - incorrect input types specified",
              "type hinting - incorrect output type specified (e.g., `np.float64`)"
            ]
         }
      ]
   },
  "wrongResults":{
      "title":"Incorrect Results",
      "additionalNotes":true,
      "negative":[
         {
            "mainPoint":"The follow data was incorrectly computed",
            "subPoints":[
               "mean(s)",
               "rolling mean(s)",
               "RMSE value(s)"
            ]
         },
         {
            "mainPoint":"The following was wrong with the equations",
            "subPoints":[
               "the RMSE equation was incorrectly encoded",
               "the RMSE equation's parameters were incorrectly specified"
            ]
         },
         {
            "mainPoint":"The polynomial equation was incorrect",
            "subPoints":[
               "the equation should have been 0.008312 x^2 - 1.179 x + 37"
            ]
         }
      ]
   }
}